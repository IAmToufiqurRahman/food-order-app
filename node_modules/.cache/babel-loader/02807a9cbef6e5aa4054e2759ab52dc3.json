{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\React Projects\\\\food-order-app\\\\src\\\\components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from 'react';\nimport Modal from '../UI/Modal';\nimport CartItem from './CartItem';\nimport CartContext from '../../store/cart-context';\nimport Checkout from './Checkout';\nimport classes from './Cart.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cart(props) {\n  _s();\n\n  const [useCheckOut, setIsCheckOut] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes['cart-items'],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onAdd: cartItemAddHandler.bind(null, item),\n      onRemove: cartItemRemoveHandler.bind(null, item.id)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this); // adding bind() on those to function pointer ensures that the item.id or item is passed to those funtion pointers, bind pre-configure a function for future execution and allows you to pre-configure the argument that function will receive when it's being executed.\n\n\n  const orderHandler = () => {\n    setIsCheckOut(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Checkout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes['button--alt'],\n        onClick: props.onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.button,\n        onClick: orderHandler,\n        children: \"Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Cart, \"NqYM6QMlwZS8tAlyOXLyzWc159I=\");\n\n_c = Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["D:/Projects/React Projects/food-order-app/src/components/Cart/Cart.js"],"names":["useContext","useState","Modal","CartItem","CartContext","Checkout","classes","Cart","props","useCheckOut","setIsCheckOut","cartCtx","totalAmount","toFixed","hasItems","items","length","cartItemAddHandler","item","addItem","amount","cartItemRemoveHandler","id","removeItem","cartItems","map","name","price","bind","orderHandler","onClose","total","actions","button"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AAEA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAClC,QAAM,CAACC,WAAD,EAAcC,aAAd,IAA+BT,QAAQ,CAAC,KAAD,CAA7C;AAEA,QAAMU,OAAO,GAAGX,UAAU,CAACI,WAAD,CAA1B;AAEA,QAAMQ,WAAW,GAAI,IAAGD,OAAO,CAACC,WAAR,CAAoBC,OAApB,CAA4B,CAA5B,CAA+B,EAAvD;AAEA,QAAMC,QAAQ,GAAGH,OAAO,CAACI,KAAR,CAAcC,MAAd,GAAuB,CAAxC;;AAEA,QAAMC,kBAAkB,GAAGC,IAAI,IAAI;AACjCP,IAAAA,OAAO,CAACQ,OAAR,CAAgB,EAAE,GAAGD,IAAL;AAAWE,MAAAA,MAAM,EAAE;AAAnB,KAAhB;AACD,GAFD;;AAIA,QAAMC,qBAAqB,GAAGC,EAAE,IAAI;AAClCX,IAAAA,OAAO,CAACY,UAAR,CAAmBD,EAAnB;AACD,GAFD;;AAIA,QAAME,SAAS,gBACb;AAAI,IAAA,SAAS,EAAElB,OAAO,CAAC,YAAD,CAAtB;AAAA,cACGK,OAAO,CAACI,KAAR,CAAcU,GAAd,CAAkBP,IAAI,iBACrB,QAAC,QAAD;AAAwB,MAAA,IAAI,EAAEA,IAAI,CAACQ,IAAnC;AAAyC,MAAA,MAAM,EAAER,IAAI,CAACE,MAAtD;AAA8D,MAAA,KAAK,EAAEF,IAAI,CAACS,KAA1E;AAAiF,MAAA,KAAK,EAAEV,kBAAkB,CAACW,IAAnB,CAAwB,IAAxB,EAA8BV,IAA9B,CAAxF;AAA6H,MAAA,QAAQ,EAAEG,qBAAqB,CAACO,IAAtB,CAA2B,IAA3B,EAAiCV,IAAI,CAACI,EAAtC;AAAvI,OAAeJ,IAAI,CAACI,EAApB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF,CAjBkC,CAwBlC;;;AAEA,QAAMO,YAAY,GAAG,MAAM;AACzBnB,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFD;;AAIA,sBACE,QAAC,KAAD;AAAO,IAAA,OAAO,EAAEF,KAAK,CAACsB,OAAtB;AAAA,eACGN,SADH,eAGE;AAAK,MAAA,SAAS,EAAElB,OAAO,CAACyB,KAAxB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAA,kBAAOnB;AAAP;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eASE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YATF,eAWE;AAAK,MAAA,SAAS,EAAEN,OAAO,CAAC0B,OAAxB;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAE1B,OAAO,CAAC,aAAD,CAA1B;AAA2C,QAAA,OAAO,EAAEE,KAAK,CAACsB,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAKGhB,QAAQ,iBACP;AAAQ,QAAA,SAAS,EAAER,OAAO,CAAC2B,MAA3B;AAAmC,QAAA,OAAO,EAAEJ,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAvDuBtB,I;;KAAAA,I","sourcesContent":["import { useContext, useState } from 'react'\r\n\r\nimport Modal from '../UI/Modal'\r\nimport CartItem from './CartItem'\r\nimport CartContext from '../../store/cart-context'\r\nimport Checkout from './Checkout'\r\n\r\nimport classes from './Cart.module.css'\r\n\r\nexport default function Cart(props) {\r\n  const [useCheckOut, setIsCheckOut] = useState(false)\r\n\r\n  const cartCtx = useContext(CartContext)\r\n\r\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`\r\n\r\n  const hasItems = cartCtx.items.length > 0\r\n\r\n  const cartItemAddHandler = item => {\r\n    cartCtx.addItem({ ...item, amount: 1 })\r\n  }\r\n\r\n  const cartItemRemoveHandler = id => {\r\n    cartCtx.removeItem(id)\r\n  }\r\n\r\n  const cartItems = (\r\n    <ul className={classes['cart-items']}>\r\n      {cartCtx.items.map(item => (\r\n        <CartItem key={item.id} name={item.name} amount={item.amount} price={item.price} onAdd={cartItemAddHandler.bind(null, item)} onRemove={cartItemRemoveHandler.bind(null, item.id)} />\r\n      ))}\r\n    </ul>\r\n  )\r\n  // adding bind() on those to function pointer ensures that the item.id or item is passed to those funtion pointers, bind pre-configure a function for future execution and allows you to pre-configure the argument that function will receive when it's being executed.\r\n\r\n  const orderHandler = () => {\r\n    setIsCheckOut(true)\r\n  }\r\n\r\n  return (\r\n    <Modal onClose={props.onClose}>\r\n      {cartItems}\r\n\r\n      <div className={classes.total}>\r\n        <span>Total Amount</span>\r\n\r\n        <span>{totalAmount}</span>\r\n      </div>\r\n\r\n      <Checkout />\r\n\r\n      <div className={classes.actions}>\r\n        <button className={classes['button--alt']} onClick={props.onClose}>\r\n          Close\r\n        </button>\r\n\r\n        {hasItems && (\r\n          <button className={classes.button} onClick={orderHandler}>\r\n            Order\r\n          </button>\r\n        )}\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}