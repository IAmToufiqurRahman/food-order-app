{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\React Projects\\\\food-order-app\\\\src\\\\components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from 'react';\nimport Modal from '../UI/Modal';\nimport CartItem from './CartItem';\nimport CartContext from '../../store/cart-context';\nimport Checkout from './Checkout';\nimport classes from './Cart.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Cart(props) {\n  _s();\n\n  const [isCheckOut, setIsCheckOut] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [didSubmit, setDidSubmit] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes['cart-items'],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onAdd: cartItemAddHandler.bind(null, item),\n      onRemove: cartItemRemoveHandler.bind(null, item.id)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this); // adding bind() on those to function pointer ensures that the item.id or item is passed to those funtion pointers, bind pre-configure a function for future execution and allows you to pre-configure the argument that function will receive when it's being executed.\n\n\n  const orderHandler = () => {\n    setIsCheckOut(true);\n  };\n\n  const submitOrderHandler = async userData => {\n    setIsSubmitting(true);\n    const response = await fetch('https://react-custom-hook-90948-default-rtdb.firebaseio.com/orders.json', {\n      method: 'POST',\n      body: JSON.stringify({\n        user: userData,\n        orderedItems: cartCtx.items\n      })\n    });\n    setIsSubmitting(false);\n    setDidSubmit(true);\n  };\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes['button--alt'],\n      onClick: props.onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: orderHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n\n  const cartModalContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), isCheckOut && /*#__PURE__*/_jsxDEV(Checkout, {\n      onConfirm: submitOrderHandler,\n      onCancel: props.onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 22\n    }, this), !isCheckOut && modalActions]\n  }, void 0, true);\n\n  const isSubmittingModalContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Sending Order Data\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 36\n  }, this);\n\n  const didSubmitModalContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Successfully Sent the order\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 33\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [!isSubmitting && !didSubmit && cartModalContent, isSubmitting && isSubmittingModalContent, !isSubmitting && didSubmit && didSubmitModalContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Cart, \"oThxiRZ44dDXERGkYUHDwWBoHQc=\");\n\n_c = Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["D:/Projects/React Projects/food-order-app/src/components/Cart/Cart.js"],"names":["useContext","useState","Modal","CartItem","CartContext","Checkout","classes","Cart","props","isCheckOut","setIsCheckOut","isSubmitting","setIsSubmitting","didSubmit","setDidSubmit","cartCtx","totalAmount","toFixed","hasItems","items","length","cartItemAddHandler","item","addItem","amount","cartItemRemoveHandler","id","removeItem","cartItems","map","name","price","bind","orderHandler","submitOrderHandler","userData","response","fetch","method","body","JSON","stringify","user","orderedItems","modalActions","actions","onClose","button","cartModalContent","total","isSubmittingModalContent","didSubmitModalContent"],"mappings":"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","sourcesContent":["import { useContext, useState } from 'react'\r\n\r\nimport Modal from '../UI/Modal'\r\nimport CartItem from './CartItem'\r\nimport CartContext from '../../store/cart-context'\r\nimport Checkout from './Checkout'\r\n\r\nimport classes from './Cart.module.css'\r\n\r\nexport default function Cart(props) {\r\n  const [isCheckOut, setIsCheckOut] = useState(false)\r\n  const [isSubmitting, setIsSubmitting] = useState(false)\r\n  const [didSubmit, setDidSubmit] = useState(false)\r\n\r\n  const cartCtx = useContext(CartContext)\r\n\r\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`\r\n\r\n  const hasItems = cartCtx.items.length > 0\r\n\r\n  const cartItemAddHandler = item => {\r\n    cartCtx.addItem({ ...item, amount: 1 })\r\n  }\r\n\r\n  const cartItemRemoveHandler = id => {\r\n    cartCtx.removeItem(id)\r\n  }\r\n\r\n  const cartItems = (\r\n    <ul className={classes['cart-items']}>\r\n      {cartCtx.items.map(item => (\r\n        <CartItem key={item.id} name={item.name} amount={item.amount} price={item.price} onAdd={cartItemAddHandler.bind(null, item)} onRemove={cartItemRemoveHandler.bind(null, item.id)} />\r\n      ))}\r\n    </ul>\r\n  )\r\n  // adding bind() on those to function pointer ensures that the item.id or item is passed to those funtion pointers, bind pre-configure a function for future execution and allows you to pre-configure the argument that function will receive when it's being executed.\r\n\r\n  const orderHandler = () => {\r\n    setIsCheckOut(true)\r\n  }\r\n\r\n  const submitOrderHandler = async userData => {\r\n    setIsSubmitting(true)\r\n\r\n    const response = await fetch('https://react-custom-hook-90948-default-rtdb.firebaseio.com/orders.json', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        user: userData,\r\n        orderedItems: cartCtx.items\r\n      })\r\n    })\r\n\r\n    setIsSubmitting(false)\r\n    setDidSubmit(true)\r\n  }\r\n\r\n  const modalActions = (\r\n    <div className={classes.actions}>\r\n      <button className={classes['button--alt']} onClick={props.onClose}>\r\n        Close\r\n      </button>\r\n\r\n      {hasItems && (\r\n        <button className={classes.button} onClick={orderHandler}>\r\n          Order\r\n        </button>\r\n      )}\r\n    </div>\r\n  )\r\n\r\n  const cartModalContent = (\r\n    <>\r\n      {cartItems}\r\n\r\n      <div className={classes.total}>\r\n        <span>Total Amount</span>\r\n\r\n        <span>{totalAmount}</span>\r\n      </div>\r\n\r\n      {isCheckOut && <Checkout onConfirm={submitOrderHandler} onCancel={props.onClose} />}\r\n\r\n      {!isCheckOut && modalActions}\r\n    </>\r\n  )\r\n\r\n  const isSubmittingModalContent = <p>Sending Order Data</p>\r\n\r\n  const didSubmitModalContent = <p>Successfully Sent the order</p>\r\n\r\n  return (\r\n    <Modal onClose={props.onClose}>\r\n      {!isSubmitting && !didSubmit && cartModalContent}\r\n      {isSubmitting && isSubmittingModalContent}\r\n      {!isSubmitting && didSubmit && didSubmitModalContent}\r\n    </Modal>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}