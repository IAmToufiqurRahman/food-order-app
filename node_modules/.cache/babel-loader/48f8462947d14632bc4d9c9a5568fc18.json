{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\React Projects\\\\food-order-app\\\\src\\\\components\\\\Meals\\\\MealItem\\\\MealItemForm.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport Input from '../../UI/Input';\nimport classes from './MealItemForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MealItemForm(props) {\n  _s();\n\n  const [amountIsValid, setAmountIsValid] = useState(true);\n  const amountInputRef = useRef();\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredAmount = amountInputRef.current.value;\n    const enteredAmountNumber = +enteredAmount;\n\n    if (enteredAmount.trim().length === 0 || enteredAmountNumber < 1 || enteredAmountNumber > 20) {\n      setAmountIsValid(false);\n      return;\n    }\n\n    props.onAddToCart(enteredAmountNumber);\n  };\n\n  const highestValue = amountInputRef.current.value;\n  const value = +highestValue;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      ref: amountInputRef,\n      label: \"Amount\",\n      input: {\n        id: 'amount_' + props.id,\n        type: 'number',\n        min: '1',\n        max: '20',\n        step: '1',\n        defaultValue: '1'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: value > 20,\n      children: \"+ Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), !amountIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please enter a valid amount(1~20)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MealItemForm, \"49LGRK4jBiAcXkiYfsTkxzkpjmw=\");\n\n_c = MealItemForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MealItemForm\");","map":{"version":3,"sources":["D:/Projects/React Projects/food-order-app/src/components/Meals/MealItem/MealItemForm.js"],"names":["useRef","useState","Input","classes","MealItemForm","props","amountIsValid","setAmountIsValid","amountInputRef","submitHandler","event","preventDefault","enteredAmount","current","value","enteredAmountNumber","trim","length","onAddToCart","highestValue","form","id","type","min","max","step","defaultValue"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AAEA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,OAAOC,OAAP,MAAoB,2BAApB;;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC1C,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,IAAD,CAAlD;AAEA,QAAMO,cAAc,GAAGR,MAAM,EAA7B;;AAEA,QAAMS,aAAa,GAAGC,KAAK,IAAI;AAC7BA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,aAAa,GAAGJ,cAAc,CAACK,OAAf,CAAuBC,KAA7C;AACA,UAAMC,mBAAmB,GAAG,CAACH,aAA7B;;AAEA,QAAIA,aAAa,CAACI,IAAd,GAAqBC,MAArB,KAAgC,CAAhC,IAAqCF,mBAAmB,GAAG,CAA3D,IAAgEA,mBAAmB,GAAG,EAA1F,EAA8F;AAC5FR,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACA;AACD;;AAEDF,IAAAA,KAAK,CAACa,WAAN,CAAkBH,mBAAlB;AACD,GAZD;;AAcA,QAAMI,YAAY,GAAGX,cAAc,CAACK,OAAf,CAAuBC,KAA5C;AACA,QAAMA,KAAK,GAAG,CAACK,YAAf;AAEA,sBACE;AAAM,IAAA,SAAS,EAAEhB,OAAO,CAACiB,IAAzB;AAA+B,IAAA,QAAQ,EAAEX,aAAzC;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,GAAG,EAAED,cADP;AAEE,MAAA,KAAK,EAAC,QAFR;AAGE,MAAA,KAAK,EAAE;AACLa,QAAAA,EAAE,EAAE,YAAYhB,KAAK,CAACgB,EADjB;AAELC,QAAAA,IAAI,EAAE,QAFD;AAGLC,QAAAA,GAAG,EAAE,GAHA;AAILC,QAAAA,GAAG,EAAE,IAJA;AAKLC,QAAAA,IAAI,EAAE,GALD;AAMLC,QAAAA,YAAY,EAAE;AANT;AAHT;AAAA;AAAA;AAAA;AAAA,YADF,eAeE;AAAQ,MAAA,QAAQ,EAAEZ,KAAK,GAAG,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,EAiBG,CAACR,aAAD,iBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GA3CuBF,Y;;KAAAA,Y","sourcesContent":["import { useRef, useState } from 'react'\r\n\r\nimport Input from '../../UI/Input'\r\n\r\nimport classes from './MealItemForm.module.css'\r\n\r\nexport default function MealItemForm(props) {\r\n  const [amountIsValid, setAmountIsValid] = useState(true)\r\n\r\n  const amountInputRef = useRef()\r\n\r\n  const submitHandler = event => {\r\n    event.preventDefault()\r\n\r\n    const enteredAmount = amountInputRef.current.value\r\n    const enteredAmountNumber = +enteredAmount\r\n\r\n    if (enteredAmount.trim().length === 0 || enteredAmountNumber < 1 || enteredAmountNumber > 20) {\r\n      setAmountIsValid(false)\r\n      return\r\n    }\r\n\r\n    props.onAddToCart(enteredAmountNumber)\r\n  }\r\n\r\n  const highestValue = amountInputRef.current.value\r\n  const value = +highestValue\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={submitHandler}>\r\n      <Input\r\n        ref={amountInputRef}\r\n        label='Amount'\r\n        input={{\r\n          id: 'amount_' + props.id,\r\n          type: 'number',\r\n          min: '1',\r\n          max: '20',\r\n          step: '1',\r\n          defaultValue: '1'\r\n        }}\r\n      />\r\n      {/* Two curly braces: one for embedding javascript expression and the other one is there because the value is object */}\r\n\r\n      <button disabled={value > 20}>+ Add</button>\r\n\r\n      {!amountIsValid && <p>Please enter a valid amount(1~20)</p>}\r\n    </form>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}